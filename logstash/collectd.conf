input {
udp {
host => "0.0.0.0"
port => 25826         # 25826 matches port specified in collectd.conf
buffer_size => 1452   # 1452 is the default buffer size for Collectd
codec => collectd {typesdb => [ "/opt/collectd/share/collectd/my_types.db", "/opt/collectd/share/collectd/types.db"]} # specific Collectd codec to invoke
type => "collectd"
tags => "collectd"
}
}
filter{

	mutate {
                 rename => { "host" => "Hostname" }
        }
	if [plugin] == "cpu" {

        if [type_instance] == "user" {
                mutate {  # Renames the 'HOSTORIP' field to 'client_ip'
                                rename => { "value" => "cpu_util" }
                }
        }
        else {
                  mutate { 
                                rename => { "value" => "cpu_%{type_instance}" }
                }
        }
	}

	if [plugin] == "memory" {

        	if [type_instance] == "used" {
                	mutate {  # Renames the 'HOSTORIP' field to 'client_ip'
                                rename => { "value" => "mem_util" }
                	}	
        	}      
        	else {
                  	mutate { 
                                rename => { "value" => "mem_%{type_instance}" }
                	}
        	}
	}

        if [plugin] == "protocols" {
		if[type_instance] == "EstabResets" {
          		mutate {     
                		rename => { "value" => "TCP_ResetSegs" }
                	}      
        	}
        	else if[type_instance] == "RetransSegs" {
          		mutate {     
                		rename => { "value" => "TCP_RetransSegs" }
                 	}	
        	} 
        	else {
                	drop { }
        	}
	}

	if [plugin] == "disk" {
        	if[collectd_type] == "disk_octets" {
          		mutate {
                		rename => { "read" => "disk_read" }
                		rename => { "write" => "disk_write" }
                	}
        	}
        	else {
                	drop { }
        	}
	}

	if[plugin] == "interface"{
	 	mutate {
	              	rename => { "rx" => "Rx" }
                	rename => { "tx" => "Tx" }
                }


#		elasticsearch{
#			hosts=>["localhost:9200"]
#			query=>"type:collectd AND Hostname:%{Hostname} AND plugin:interface AND collectd_type:%{collectd_type} AND plugin_instance:%{plugin_instance}"
#			fields=>{"rx"=>"old_rx"}
#			fields=>{"tx"=>"old_tx"}
#		}
#		ruby {
#			code => "event['rx_rate'] = (event['rx'] - event['old_rx']) / 30 rescue nil"
#		}
#		ruby {
#			code => "event['tx_rate'] = (event['tx'] - event['old_tx']) / 30 rescue nil"
#		}
 }
}

output {
	stdout {  codec => json }
	elasticsearch {
		#hosts => localhost
		# hosts => ["localhost:9200"]
		#  index => "collectd-%{+YYYY.MM.dd}"
	}
}

